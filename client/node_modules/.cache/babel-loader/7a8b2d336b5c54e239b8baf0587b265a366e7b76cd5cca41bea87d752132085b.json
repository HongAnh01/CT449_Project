{"ast":null,"code":"import axios from \"axios\";\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst commonConfig = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  }\n};\nexport default ((baseURL, auth = false) => {\n  const http = axios.create({\n    baseURL,\n    ...commonConfig\n  });\n  if (auth) {\n    http.interceptors.request.use(config => {\n      if (user) {\n        config.headers.token = `Bearer ${user.accessToken}`;\n      }\n      return config;\n    });\n  }\n  return http;\n});","map":{"version":3,"names":["axios","user","JSON","parse","localStorage","getItem","commonConfig","headers","Accept","baseURL","auth","http","create","interceptors","request","use","config","token","accessToken"],"sources":["C:/D/learned/2324_HK1_N4/PhatTrienUngDungWEB_NMT/test/client/services/http.service.js"],"sourcesContent":["import axios from \"axios\";\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\nconst commonConfig = {\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n    },\r\n};\r\n\r\nexport default (baseURL,auth=false) => {\r\n    const http = axios.create({\r\n        baseURL,\r\n        ...commonConfig,\r\n    });\r\n    if(auth){\r\n        http.interceptors.request.use((config) => {\r\n\t\t\tif (user) {\r\n\t\t\t\tconfig.headers.token = `Bearer ${user.accessToken}`;\r\n\t\t\t}\r\n\t\t\treturn config;\r\n\t\t});\r\n    }\r\n    return http;\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;AACrD,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE;IACL,cAAc,EAAE,kBAAkB;IAClCC,MAAM,EAAE;EACZ;AACJ,CAAC;AAED,gBAAe,CAACC,OAAO,EAACC,IAAI,GAAC,KAAK,KAAK;EACnC,MAAMC,IAAI,GAAGX,KAAK,CAACY,MAAM,CAAC;IACtBH,OAAO;IACP,GAAGH;EACP,CAAC,CAAC;EACF,IAAGI,IAAI,EAAC;IACJC,IAAI,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;MAC/C,IAAIf,IAAI,EAAE;QACTe,MAAM,CAACT,OAAO,CAACU,KAAK,GAAI,UAAShB,IAAI,CAACiB,WAAY,EAAC;MACpD;MACA,OAAOF,MAAM;IACd,CAAC,CAAC;EACA;EACA,OAAOL,IAAI;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}