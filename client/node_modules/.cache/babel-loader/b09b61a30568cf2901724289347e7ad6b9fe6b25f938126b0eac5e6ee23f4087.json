{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport API from '../api';\nexport default {\n  data() {\n    return {\n      username: '',\n      email: '',\n      password: ''\n    };\n  },\n  computed: {\n    usernameRules() {\n      return [value => !!value || 'Username is required', value => value && value.length >= 6 || 'Username must be at least 6 characters'\n      // Các quy tắc khác có thể được thêm vào ở đây\n      ];\n    },\n\n    emailRules() {\n      return [value => !!value || 'Email is required', value => /.+@.+\\..+/.test(value) || 'Email must be valid'\n      // Các quy tắc khác có thể được thêm vào ở đây\n      ];\n    },\n\n    passwordRules() {\n      return [value => !!value || 'Password is required', value => value && value.length >= 8 || 'Password must be at least 8 characters'\n      // Các quy tắc khác có thể được thêm vào ở đây\n      ];\n    }\n  },\n\n  methods: {\n    async registerUser() {\n      try {\n        const userData = {\n          username: this.username,\n          email: this.email,\n          password: this.password\n        };\n        const response = await API.registerUser(userData);\n        console.log(response); // Hiển thị thông báo đăng ký thành công\n        alert(response);\n        this.$router.push('/login');\n      } catch (error) {\n        console.error(error.message); // Hiển thị thông báo lỗi\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAsCA;AACA;EACAA;IACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA,QACAC,4CACAA;MACA;MAAA,CACA;IACA;;IACAC;MACA,QACAD,yCACAA;MACA;MAAA,CACA;IACA;;IACAE;MACA,QACAF,4CACAA;MACA;MAAA,CACA;IACA;EACA;;EACAG;IACA;MACA;QACA;UACAR;UACAC;UACAC;QACA;QAEA;QAEAO;QACAC;QACA;MACA;QACAD;MACA;IACA;EACA;AACA","names":["data","username","email","password","computed","usernameRules","value","emailRules","passwordRules","methods","console","alert"],"sourceRoot":"src/views","sources":["Register.vue"],"sourcesContent":["<!-- Register.vue -->\r\n<template>\r\n    <v-container fill-height>\r\n        <v-row align=\"center\">\r\n            <!-- Column for Image/Content -->\r\n            <v-col cols=\"12\" md=\"6\" class=\"image-column\">\r\n                <v-img src=\"../assets/resgiter.svg\" contain></v-img>\r\n            </v-col>\r\n            <!-- Column for Registration Form -->\r\n            <v-col cols=\"12\" md=\"6\">\r\n                <v-card class=\"elevation-12\">\r\n                    <v-card-title class=\"justify-center\">Register</v-card-title>\r\n                    <v-card-text>\r\n                        <v-form @submit.prevent=\"registerUser\">\r\n                            <!-- Username Input -->\r\n                            <v-text-field v-model=\"username\" :rules=\"usernameRules\" label=\"Username\"\r\n                                outlined></v-text-field>\r\n                            <!-- Email Input -->\r\n                            <v-text-field v-model=\"email\" :rules=\"emailRules\" label=\"Email\" outlined></v-text-field>\r\n                            <!-- Password Input -->\r\n                            <v-text-field v-model=\"password\" :rules=\"passwordRules\" label=\"Password\" type=\"password\"\r\n                                outlined></v-text-field>\r\n                            <!-- Register Button -->\r\n                            <v-btn type=\"submit\" class=\"reg-btn\" color=\"success\" block\r\n                                style=\"padding-top: 24px; padding-bottom: 24px;\">Register</v-btn>\r\n                        </v-form>\r\n                    </v-card-text>\r\n                    <v-card-actions class=\"justify-center\">\r\n                        <span>Have an account? <router-link to=\"/login\">Go to login</router-link></span>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-col>\r\n        </v-row>\r\n    </v-container>\r\n</template>\r\n  \r\n  \r\n<script>\r\nimport API from '../api'\r\nexport default {\r\n    data() {\r\n        return {\r\n            username: '',\r\n            email: '',\r\n            password: ''\r\n        };\r\n    },\r\n    computed: {\r\n        usernameRules() {\r\n            return [\r\n                value => !!value || 'Username is required',\r\n                value => (value && value.length >= 6) || 'Username must be at least 6 characters'\r\n                // Các quy tắc khác có thể được thêm vào ở đây\r\n            ];\r\n        },\r\n        emailRules() {\r\n            return [\r\n                value => !!value || 'Email is required',\r\n                value => /.+@.+\\..+/.test(value) || 'Email must be valid'\r\n                // Các quy tắc khác có thể được thêm vào ở đây\r\n            ];\r\n        },\r\n        passwordRules() {\r\n            return [\r\n                value => !!value || 'Password is required',\r\n                value => (value && value.length >= 8) || 'Password must be at least 8 characters'\r\n                // Các quy tắc khác có thể được thêm vào ở đây\r\n            ];\r\n        }\r\n    },\r\n    methods: {\r\n        async registerUser() {\r\n      try {\r\n        const userData = {\r\n          username: this.username,\r\n          email: this.email,\r\n          password: this.password\r\n        };\r\n\r\n        const response = await API.registerUser(userData);\r\n\r\n        console.log(response); // Hiển thị thông báo đăng ký thành công\r\n        alert(response);\r\n        this.$router.push('/login');\r\n      } catch (error) {\r\n        console.error(error.message); // Hiển thị thông báo lỗi\r\n      }\r\n    }\r\n    }\r\n};\r\n</script>\r\n  \r\n\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}